if (!String.prototype.trim) {
  (function() {
    // Make sure we trim BOM and NBSP
    var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
    String.prototype.trim = function() {
      return this.replace(rtrim, '');
    };
  })();
}

if (!String.prototype.isEmail) {
  (function() {    
    String.prototype.isEmail = function() {
	  var emailPattern = /^[a-zA-Z0-9._\-']+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,5}$/;	
      return emailPattern.test(this); 
    };
  })();
}

if (!String.prototype.isValidDate) {
  (function() {
    String.prototype.isValidDate = function() {
      if(!/^\d{1,2}\/\d{1,2}\/\d{4}$/.test(this))  return false;

		// Parse the date parts to integers
		var parts = this.split("/");
		var day = parseInt(parts[1], 10);
		var month = parseInt(parts[0], 10);
		var year = parseInt(parts[2], 10);
	
		// Check the ranges of month and year
		if(year < 1000 || year > 3000 || month == 0 || month > 12)
			return false;
	
		var monthLength = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
	
		// Adjust for leap years
		if(year % 400 == 0 || (year % 100 != 0 && year % 4 == 0))
			monthLength[1] = 29;
	
		// Check the range of the day
		return day > 0 && day <= monthLength[month - 1];	  
    };
  })();
}

if (!String.prototype.isValidSSN) {
  (function() {
    String.prototype.isValidSSN = function() {
	  var ssnPattern = /^\d{3}-\d{2}-\d{4}$/;
	  return ssnPattern.test(this);   
    };
  })();
}

if (!String.prototype.isNumeric) {
  (function() {
    String.prototype.isNumeric = function() {
	  return !isNaN(parseFloat(this)) && isFinite(this); 
    };
  })();
}
